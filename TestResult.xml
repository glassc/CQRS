<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!--This file represents the results of running a test suite-->
<test-results name="C:\Users\chris\Development\cqrs\build\UnitTests.dll" total="13" errors="1" failures="0" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2011-11-24" time="21:30:28">
  <environment nunit-version="2.5.10.11092" clr-version="2.0.50727.5448" os-version="Microsoft Windows NT 6.1.7601 Service Pack 1" platform="Win32NT" cwd="C:\Users\chris\Development\cqrs" machine-name="CHRIS-PC" user="chris" user-domain="chris-PC" />
  <culture-info current-culture="en-CA" current-uiculture="en-US" />
  <test-suite type="Assembly" name="C:\Users\chris\Development\cqrs\build\UnitTests.dll" executed="True" result="Failure" success="False" time="3.810" asserts="0">
    <results>
      <test-suite type="Namespace" name="UnitTests" executed="True" result="Failure" success="False" time="3.770" asserts="0">
        <results>
          <test-suite type="Namespace" name="Configuration" executed="True" result="Success" success="True" time="1.690" asserts="0">
            <results>
              <test-suite type="Namespace" name="NInject" executed="True" result="Success" success="True" time="1.690" asserts="0">
                <results>
                  <test-suite type="TestFixture" name="NInjectContainerTest" executed="True" result="Success" success="True" time="1.690" asserts="0">
                    <results>
                      <test-case name="UnitTests.Configuration.NInject.NInjectContainerTest.ShouldRegisterAndGetInstance" executed="True" result="Success" success="True" time="1.570" asserts="2" />
                      <test-case name="UnitTests.Configuration.NInject.NInjectContainerTest.ShouldRegisterAndGetMoreThenOneInstance" executed="True" result="Success" success="True" time="0.040" asserts="4" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="Namespace" name="Domain" executed="True" result="Failure" success="False" time="2.050" asserts="0">
            <results>
              <test-suite type="TestFixture" name="AggregateRootTest" executed="True" result="Success" success="True" time="0.150" asserts="0">
                <results>
                  <test-case name="UnitTests.Domain.AggregateRootTest.ShouldCallEventHandler" executed="True" result="Success" success="True" time="0.010" asserts="1" />
                  <test-case name="UnitTests.Domain.AggregateRootTest.ShouldInvokeEventApplied_WhenEventIsApplied" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="UnitTests.Domain.AggregateRootTest.ShouldLoadFromHistory" executed="True" result="Success" success="True" time="0.000" asserts="1" />
                  <test-case name="UnitTests.Domain.AggregateRootTest.ShouldThrowException_WhenNoEventHandlerIsFound" executed="True" result="Success" success="True" time="0.130" asserts="0" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="DomainRepositoryTest" executed="True" result="Success" success="True" time="1.640" asserts="0">
                <results>
                  <test-case name="UnitTests.Domain.DomainRepositoryTest.ShouldCreateNewAggergateRoot" executed="True" result="Success" success="True" time="1.530" asserts="2" />
                  <test-case name="UnitTests.Domain.DomainRepositoryTest.ShouldLoadAggergateRoot" executed="True" result="Success" success="True" time="0.100" asserts="3" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="UnitOfWorkTest" executed="True" result="Failure" success="False" time="0.230" asserts="0">
                <results>
                  <test-case name="UnitTests.Domain.UnitOfWorkTest.ShouldCommitChanges" executed="True" result="Error" success="False" time="0.200" asserts="0">
                    <failure>
                      <message><![CDATA[Moq.MockException : 
Expected invocation on the mock at least once, but was never performed: b => b.Publish<TestEvent>(.event)
No setups configured.

Performed invocations:
IEventBus.Publish(UnitTests.Eventing.TestEvent)]]></message>
                      <stack-trace><![CDATA[at Moq.Mock.ThrowVerifyException(MethodCall expected, IEnumerable`1 setups, IEnumerable`1 actualCalls, Expression expression, Times times, Int32 callCount)
at Moq.Mock.VerifyCalls(Interceptor targetInterceptor, MethodCall expected, Expression expression, Times times)
at Moq.Mock.Verify[T](Mock mock, Expression`1 expression, Times times, String failMessage)
at Moq.Mock`1.Verify(Expression`1 expression)
at UnitTests.Domain.UnitOfWorkTest.ShouldCommitChanges() in c:\Users\chris\Development\cqrs\src\UnitTests\Domain\UnitOfWorkTest.cs:line 51
]]></stack-trace>
                    </failure>
                  </test-case>
                  <test-case name="UnitTests.Domain.UnitOfWorkTest.ShouldTrackChangedEvent_WhenEventHasBeenApplied" executed="True" result="Success" success="True" time="0.010" asserts="2" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="Namespace" name="Eventing" executed="True" result="Success" success="True" time="0.020" asserts="0">
            <results>
              <test-suite type="Namespace" name="Storage" executed="True" result="Success" success="True" time="0.020" asserts="0">
                <results>
                  <test-suite type="TestFixture" name="MemoryEventStoreTest" executed="True" result="Success" success="True" time="0.020" asserts="0">
                    <results>
                      <test-case name="UnitTests.Eventing.Storage.MemoryEventStoreTest.ShouldHaveException_WhenAggregateRootNotSaved" executed="True" result="Success" success="True" time="0.010" asserts="0" />
                      <test-case name="UnitTests.Eventing.Storage.MemoryEventStoreTest.ShouldLoadAggregateRoot" executed="True" result="Success" success="True" time="0.010" asserts="2" />
                      <test-case name="UnitTests.Eventing.Storage.MemoryEventStoreTest.ShouldSaveEvents" executed="True" result="Success" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>